@Value
@Builder(builderClassName = "ProductRelationsCreatedCommandBuilder")
class ProductRelationsCreatedCommand implements ProductRelationsCommand {
    Long createdProductId;
    Set<ProductRelationsForm> relations;
    
    /**
     * Custom builder that adds withRelations method
     */
    public static class ProductRelationsCreatedCommandBuilder {
        // This field will collect relations during build
        private Set<ProductRelationsForm> relations = new HashSet<>();
        
        /**
         * Builder method for adding relations from DTOs
         * @param relationDtos Set of relation DTOs to add
         * @return this builder instance for method chaining
         */
        public ProductRelationsCreatedCommandBuilder withRelations(Set<ProductRelationDto> relationDtos) {
            if (relationDtos != null && !relationDtos.isEmpty()) {
                // Initialize relations collection if needed
                if (this.relations == null) {
                    this.relations = new HashSet<>();
                }
                
                // Map each DTO to a form and add to relations
                relationDtos.forEach(dto -> {
                    ProductRelationsForm form = ProductRelationsForm.builder()
                        .sourceId(dto.getSourceId())
                        .relationType(dto.getRelationType())
                        .build();
                    this.relations.add(form);
                });
            }
            return this;
        }
    }
}
