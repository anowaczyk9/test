@Test
    void shouldBuildCommandWithDtos() {
        // given
        Long productId = 123L;
        Set<ProductRelationDto> dtos = new HashSet<>();
        dtos.add(new ProductRelationDto(456L, "SIMILAR"));
        dtos.add(new ProductRelationDto(789L, "ACCESSORY"));
        
        // when
        ProductRelationsUpdatedCommand command = ProductRelationsUpdatedCommand.builder()
                .updatedProductId(productId)
                .withRelations(dtos)
                .build();
        
        // then
        assertEquals(productId, command.getUpdatedProductId());
        assertEquals(2, command.getRelations().size());
        
        // Verify all relations are present
        boolean found456 = false;
        boolean found789 = false;
        
        for (ProductRelationsForm form : command.getRelations()) {
            if (form.getSourceId().equals(456L)) {
                found456 = true;
                assertEquals("SIMILAR", form.getRelationType());
            } else if (form.getSourceId().equals(789L)) {
                found789 = true;
                assertEquals("ACCESSORY", form.getRelationType());
            }
        }
        
        assertTrue(found456, "Relation with sourceId 456 not found");
        assertTrue(found789, "Relation with sourceId 789 not found");
    }
