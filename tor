@Value
class ProductRelationsUpdatedCommand implements ProductRelationsCommand {
    private final Long updatedProductId;
    private final Set<ProductRelationsForm> relations;
    
    public static ProductRelationsUpdatedCommandBuilder builder() {
        return new ProductRelationsUpdatedCommandBuilder();
    }
    
    public static class ProductRelationsUpdatedCommandBuilder {
        private Long updatedProductId;
        private Set<ProductRelationsForm> relations = new HashSet<>();
        
        public ProductRelationsUpdatedCommandBuilder updatedProductId(Long updatedProductId) {
            this.updatedProductId = updatedProductId;
            return this;
        }
        
        public ProductRelationsUpdatedCommandBuilder relations(Set<ProductRelationsForm> relations) {
            this.relations = relations;
            return this;
        }
        
        public ProductRelationsUpdatedCommandBuilder withRelations(Set<ProductRelationDto> relationDtos) {
            if (relationDtos != null && !relationDtos.isEmpty()) {
                relationDtos.forEach(dto -> {
                    ProductRelationsForm form = ProductRelationsForm.builder()
                            .sourceId(dto.getSourceId())
                            .relationType(dto.getRelationType())
                            .build();
                    this.relations.add(form);
                });
            }
            return this;
        }
        
        public ProductRelationsUpdatedCommand build() {
            return new ProductRelationsUpdatedCommand(updatedProductId, relations);
        }
    }
}
